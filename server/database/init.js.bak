const sqlite3 = require('sqlite3').verbose();
const path = require('path');
const bcrypt = require('bcrypt');

const dbPath = path.join(__dirname, 'database.sqlite');
const db = new sqlite3.Database(dbPath, (err) => {
  if (err) {
    console.error('❌ Veritabanı bağlantı hatası:', err);
    process.exit(1);
  }
  console.log('✅ SQLite veritabanına bağlandı:', dbPath);
});

// Veritabanı bağlantısını test et
const testConnection = () => {
  return new Promise((resolve, reject) => {
    db.get('SELECT 1', (err) => {
      if (err) {
        console.error('❌ Veritabanı bağlantı testi başarısız:', err);
        reject(err);
      } else {
        console.log('✅ Veritabanı bağlantı testi başarılı');
        resolve();
      }
    });
  });
};

// Veritabanı tablolarını oluştur
const initDatabase = () => {
  return new Promise((resolve, reject) => {
    console.log('✅ Veritabanı başarıyla başlatıldı!');

    // Tabloları oluştur
    db.serialize(() => {
      // Kullanıcılar tablosu (admin paneli için)
      db.run(`
        CREATE TABLE IF NOT EXISTS users (
          id INTEGER PRIMARY KEY AUTOINCREMENT,
          username TEXT UNIQUE NOT NULL,
          password TEXT NOT NULL,
          email TEXT,
          role TEXT DEFAULT 'admin',
          created_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
      `);

      // Müşteriler tablosu
      db.run(`
        CREATE TABLE IF NOT EXISTS customers (
          id INTEGER PRIMARY KEY AUTOINCREMENT,
          name TEXT NOT NULL,
          tc_no TEXT NOT NULL,
          phone TEXT NOT NULL,
          email TEXT UNIQUE NOT NULL,
          password TEXT NOT NULL,
          birth_date TEXT,
          address TEXT,
          credit_limit DECIMAL(10,2) DEFAULT 2500,
          current_debt DECIMAL(10,2) DEFAULT 0,
          verification_token TEXT,
          verification_token_expires_at DATETIME,
          email_verified INTEGER DEFAULT 0,
          status TEXT DEFAULT 'pending',
          created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
          updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
      `);

      // Satışlar tablosu
      db.run(`
        CREATE TABLE IF NOT EXISTS sales (
          id INTEGER PRIMARY KEY AUTOINCREMENT,
          customer_id INTEGER NOT NULL,
          total_amount DECIMAL(10,2) NOT NULL,
          installment_count INTEGER NOT NULL,
          interest_rate DECIMAL(5,2) NOT NULL,
          total_with_interest DECIMAL(10,2) NOT NULL,
          installment_amount DECIMAL(10,2) NOT NULL,
          first_payment_date DATE NOT NULL,
          status TEXT DEFAULT 'pending',
          approval_token TEXT,
          approved_at DATETIME,
          created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
          updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
          FOREIGN KEY (customer_id) REFERENCES customers(id)
        )
      `);

      // Taksitler tablosu
      db.run(`
        CREATE TABLE IF NOT EXISTS installments (
          id INTEGER PRIMARY KEY AUTOINCREMENT,
          sale_id INTEGER NOT NULL,
          installment_number INTEGER NOT NULL,
          amount DECIMAL(10,2) NOT NULL,
          due_date DATE NOT NULL,
          paid_date DATE,
          status TEXT DEFAULT 'unpaid',
          late_days INTEGER DEFAULT 0,
          created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
          updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
          FOREIGN KEY (sale_id) REFERENCES sales(id)
        )
      `);

      // Email logs tablosu
      db.run(`DROP TABLE IF EXISTS email_logs`);
      db.run(`CREATE TABLE IF NOT EXISTS email_logs (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        to_address TEXT NOT NULL,
        template_name TEXT NOT NULL,
        success INTEGER DEFAULT 0,
        error TEXT,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
      )`);

      // Email templates tablosu
      db.run(`DROP TABLE IF EXISTS email_templates`);
      db.run(`CREATE TABLE IF NOT EXISTS email_templates (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL UNIQUE,
        subject TEXT NOT NULL,
        html TEXT NOT NULL,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
      )`);

      // Newsletter abonelikleri tablosu
      db.run(`
        CREATE TABLE IF NOT EXISTS newsletter_subscribers (
          id INTEGER PRIMARY KEY AUTOINCREMENT,
          email TEXT UNIQUE NOT NULL,
          status TEXT DEFAULT 'active',
          subscribed_at DATETIME DEFAULT CURRENT_TIMESTAMP,
          unsubscribed_at DATETIME
        )
      `, (err) => {
        if (err) {
          console.error('Newsletter tablosu oluşturma hatası:', err);
          reject(err);
          return;
        }
      });

      // Müşteri sözleşme onayları tablosu
      db.run(`
        CREATE TABLE IF NOT EXISTS customer_agreements (
          id INTEGER PRIMARY KEY AUTOINCREMENT,
          customer_id INTEGER NOT NULL,
          kvkk_approved INTEGER DEFAULT 0,
          contract_approved INTEGER DEFAULT 0,
          electronic_approved INTEGER DEFAULT 0,
          ip_address TEXT,
          user_agent TEXT,
          created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
          FOREIGN KEY (customer_id) REFERENCES customers (id)
        )
      `, (err) => {
        if (err) {
          console.error('Müşteri sözleşme onayları tablosu oluşturma hatası:', err);
          reject(err);
          return;
        }
      });

      // Gecikme faizi tablosu
      db.run(`
        CREATE TABLE IF NOT EXISTS late_payment_interest (
          id INTEGER PRIMARY KEY AUTOINCREMENT,
          annual_rate DECIMAL(5,2) NOT NULL,
          daily_rate DECIMAL(10,8) NOT NULL,
          effective_from DATE NOT NULL,
          created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
          updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
      `, (err) => {
        if (err) {
          console.error('Gecikme faizi tablosu oluşturma hatası:', err);
          reject(err);
          return;
        }
        
        // Tüm tablolar oluşturulduktan sonra varsayılan verileri ekle
        insertDefaultData()
          .then(() => {
            // Test müşterisi ekle
            const testPassword = bcrypt.hashSync('123456', 10);

            db.run(`
              INSERT OR IGNORE INTO customers (id, name, tc_no, phone, email, address, credit_limit, status, email_verified, password)
              VALUES (1, 'Test Musteri', '12345678901', '05551234567', 'test@example.com', 'Test Adres', 5000, 'active', 1, ?)
            `, [testPassword]);

            // Eğer test kullanıcısı zaten varsa şifresini güncelle
            db.run(`
              UPDATE customers SET password = ?, email_verified = 1 WHERE id = 1 AND password IS NULL
            `, [testPassword]);

            // İkinci test kullanıcısı ekle
            const test2Password = bcrypt.hashSync('123456', 10);

            db.run(`
              INSERT OR IGNORE INTO customers (id, name, tc_no, phone, email, address, credit_limit, status, email_verified, password)
              VALUES (2, 'Test Musteri 2', '98765432109', '05559876543', 'test2@example.com', 'Test Adres 2', 7500, 'active', 1, ?)
            `, [test2Password]);

            // Üçüncü test kullanıcısı ekle - basit şifre
            const test3Password = bcrypt.hashSync('test123', 10);

            db.run(`
              INSERT OR IGNORE INTO customers (id, name, tc_no, phone, email, address, credit_limit, status, email_verified, password)
              VALUES (3, 'Ahmet Yilmaz', '11122233344', '05551112233', 'ahmet@test.com', 'Istanbul Test Mahallesi', 10000, 'active', 1, ?)
            `, [test3Password]);

            // Test satışı ekle
            db.run(`
              INSERT OR IGNORE INTO sales (id, customer_id, total_amount, installment_count, interest_rate, total_with_interest, installment_amount, first_payment_date, status, approval_token)
              VALUES (1, 1, 1000, 3, 5, 1050, 350, date('now', '+30 days'), 'approved', 'test-token-123')
            `);

            // Test taksitleri ekle
            db.run(`
              INSERT OR IGNORE INTO installments (id, sale_id, installment_number, amount, due_date, status)
              VALUES 
              (1, 1, 1, 350, date('now', '+30 days'), 'pending'),
              (2, 1, 2, 350, date('now', '+60 days'), 'pending'),
              (3, 1, 3, 350, date('now', '+90 days'), 'pending')
            `, (err) => {
              if (err) {
                console.error('Test verisi ekleme hatası:', err);
                reject(err);
              } else {
                console.log('Veritabanı tabloları ve test verileri başarıyla oluşturuldu');
                resolve();
              }
            });
          })
          .catch(err => {
            console.error('Varsayılan veri ekleme hatası:', err);
            reject(err);
          });
      });

      // Settings tablosu
      db.run(`
        CREATE TABLE IF NOT EXISTS settings (
          id INTEGER PRIMARY KEY AUTOINCREMENT,
          key TEXT NOT NULL UNIQUE,
          value TEXT NOT NULL,
          description TEXT NOT NULL,
          created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
          updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
      `, (err) => {
        if (err) {
          console.error('Settings tablosu oluşturma hatası:', err);
          reject(err);
          return;
        }
      });

      // Varsayılan ayarları ekle
      db.run(`
        INSERT OR IGNORE INTO settings (key, value, description) VALUES 
        ('max_credit_limit', '10000', 'Maksimum kredi limiti'),
        ('company_name', '3 Kare Yazılım ve Tasarım Ajansı Limited Şirketi', 'Şirket adı'),
        ('company_iban', 'TR48 0011 1000 0000 0137 1441 61', 'Şirket IBAN'),
        ('company_whatsapp', '0536 832 46 60', 'Şirket WhatsApp numarası'),
        ('company_phone', '0536 832 46 60', 'Şirket telefon numarası'),
        ('company_email', 'info@markaworld.com.tr', 'Şirket e-posta adresi'),
        ('company_address', 'Yeni Mahalle, Sümbül Sokak, No: 10, Kat: 2, Daire: 4, Ataşehir/İstanbul', 'Şirket adresi')
      `);
    });
  });
};

// Varsayılan verileri ekle
const insertDefaultData = () => {
  return new Promise((resolve, reject) => {
    // Varsayılan faiz oranları
    const defaultSettings = [
      { key: 'interest_rate_3', value: '5', description: '3 taksit faiz oranı (%)' },
      { key: 'interest_rate_5', value: '10', description: '5 taksit faiz oranı (%)' },
      { key: 'limit_increase_rate', value: '5', description: 'Düzenli ödeme limit artış oranı (%)' },
      { key: 'limit_decrease_rate', value: '5', description: 'Gecikme limit azalış oranı (%)' },
      { key: 'reminder_days_before', value: '3', description: 'Ödeme hatırlatma gün sayısı' },
      { key: 'max_credit_limit', value: '10000', description: 'Maksimum kredi limiti' },
      { key: 'late_payment_interest_rate', value: '24', description: 'Yıllık gecikme faizi oranı (%)' },
      { key: 'company_name', value: '3 Kare Yazilim ve Tasarim Ajansi Limited Sirketi', description: 'Şirket adı' },
      { key: 'company_iban', value: 'TR87 0001 2009 4040 0010 2640 68', description: 'Şirket IBAN' },
      { key: 'company_bank', value: 'QNB Finansbank', description: 'Şirket bankası' },
      { key: 'company_whatsapp', value: '+90 536 832 46 60', description: 'Şirket WhatsApp' }
    ];

    const stmt = db.prepare('INSERT OR IGNORE INTO settings (key, value, description) VALUES (?, ?, ?)');
    
    defaultSettings.forEach(setting => {
      stmt.run(setting.key, setting.value, setting.description);
    });

    // Varsayılan gecikme faizi oranını ekle
    db.run(`
      INSERT OR IGNORE INTO late_payment_interest (annual_rate, daily_rate, effective_from)
      VALUES (24.00, 0.0657534, '2024-06-01')
    `);
    
    // E-posta şablonlarını ekle
    const defaultEmailTemplates = [
      {
        name: 'customer_registration',
        subject: 'Marka World - E-posta Dogrulama',
        html: `
          <div style="font-family:Arial,sans-serif;max-width:600px;margin:0 auto;background-color:#f9f9f9;padding:20px">
            <div style="background-color:white;padding:30px;border-radius:10px">
              <h2 style="color:#000000">Merhaba {{CUSTOMER_NAME}},</h2>
              <p style="color:#333333;line-height:1.6">Marka World'e hoşgeldiniz!</p>
              <p style="color:#333333;line-height:1.6">Hesabınızı aktifleştirmek için aşağıdaki bağlantıya tıklayınız:</p>
              <div style="text-align:center;margin:30px 0">
                <a href="{{VERIFICATION_LINK}}" style="padding:10px 20px;background-color:#000000;color:white;text-decoration:none;border-radius:5px">E-posta Adresimi Doğrula</a>
              </div>
              <div style="background-color:#f8f9f9;padding:20px;border-radius:8px;margin:20px 0">
                <p style="color:#666666;font-size:14px;margin-top:30px">Eğer butona tıklayamazsanız, aşağıdaki bağlantıyı kopyalayıp tarayıcınızda açabilirsiniz:</p>
                <p style="color:#666666;font-size:12px;text-align:center;margin:0">{{VERIFICATION_LINK}}</p>
              </div>
              <hr style="border:none;border-top:1px solid #e0e0e0;margin:30px 0">
              <p style="color:#666666;font-size:12px;text-align:center;margin:0">Saygılarımızla,<br>Marka Dünyası</p>
            </div>
          </div>
        `
      },
      {
        name: 'payment_reminder',
        subject: 'Marka World - Odeme Hatirlatma',
        html: `
          <div style="font-family:Arial,sans-serif;max-width:600px;margin:0 auto;background-color:#f9f9f9;padding:20px">
            <div style="background-color:white;padding:30px;border-radius:10px">
              <h2 style="color:#000000">Merhaba {{CUSTOMER_NAME}},</h2>
              <p style="color:#333333;line-height:1.6">{{DUE_DATE}} tarihinde ödemeniz bulunmaktadır.</p>
              <p style="color:#333333;line-height:1.6">Ödeme tutarı: {{AMOUNT}} TL</p>
              <p style="color:#333333;line-height:1.6">Ödemenizi aşağıdaki banka hesabına yapabilirsiniz:</p>
              <div style="background-color:#f8f9f9;padding:20px;border-radius:8px;margin:20px 0">
                <p style="color:#666666;font-size:14px;margin:0">Banka: {{COMPANY_BANK}}<br>IBAN: {{COMPANY_IBAN}}</p>
              </div>
              <p style="color:#666666;font-size:14px">Sorularınız için bize WhatsApp üzerinden ulaşabilirsiniz: {{COMPANY_WHATSAPP}}</p>
              <hr style="border:none;border-top:1px solid #e0e0e0;margin:30px 0">
              <p style="color:#666666;font-size:12px;text-align:center;margin:0">Saygılarımızla,<br>Marka Dünyası</p>
            </div>
          </div>
        `
      },
      {
        name: 'overdue_payment',
        subject: 'Marka World - Geciken Odeme Bildirimi',
        html: `
          <div style="font-family:Arial,sans-serif;max-width:600px;margin:0 auto;background-color:#f9f9f9;padding:20px">
            <div style="background-color:white;padding:30px;border-radius:10px">
              <h2 style="color:#000000">Merhaba {{CUSTOMER_NAME}},</h2>
              <p style="color:#333333;line-height:1.6">{{DUE_DATE}} tarihli {{AMOUNT}} TL tutarındaki ödemeniz {{LATE_DAYS}} gün gecikmeye uğramıştır.</p>
              <p style="color:#333333;line-height:1.6">Gecikme faizi: {{LATE_FEE}} TL</p>
              <p style="color:#333333;line-height:1.6">Toplam ödenmesi gereken tutar: {{TOTAL_AMOUNT}} TL</p>
              <p style="color:#333333;line-height:1.6">Ödemenizi en kısa sürede yapmanızı rica ederiz.</p>
              <div style="background-color:#f8f9f9;padding:20px;border-radius:8px;margin:20px 0">
                <p style="color:#666666;font-size:14px;margin:0">Banka: {{COMPANY_BANK}}<br>IBAN: {{COMPANY_IBAN}}</p>
              </div>
              <p style="color:#666666;font-size:14px">Sorularınız için bize WhatsApp üzerinden ulaşabilirsiniz: {{COMPANY_WHATSAPP}}</p>
              <hr style="border:none;border-top:1px solid #e0e0e0;margin:30px 0">
              <p style="color:#666666;font-size:12px;text-align:center;margin:0">Saygılarımızla,<br>Marka Dünyası</p>
            </div>
          </div>
        `
      },
      {
        name: 'customer_activation',
        subject: 'Marka World - Hesabiniz Aktif Edildi',
        html: `
          <div style="font-family:Arial,sans-serif;max-width:600px;margin:0 auto;background-color:#f9f9f9;padding:20px">
            <div style="background-color:white;padding:30px;border-radius:10px">
              <h2 style="color:#000000">Merhaba {{CUSTOMER_NAME}},</h2>
              <p style="color:#333333;line-height:1.6">Hesabınız başarıyla aktif edilmiştir.</p>
              <p style="color:#333333;line-height:1.6">Kredi limitiniz: {{CREDIT_LIMIT}} TL</p>
              <p style="color:#333333;line-height:1.6">Hemen alışverişe başlayabilirsiniz!</p>
              <hr style="border:none;border-top:1px solid #e0e0e0;margin:30px 0">
              <p style="color:#666666;font-size:12px;text-align:center;margin:0">Saygılarımızla,<br>Marka Dünyası</p>
            </div>
          </div>
        `
      },
      {
        name: 'sale_info',
        subject: 'Marka World - Satis Bilgileri',
        html: `
          <div style="font-family:Arial,sans-serif;max-width:600px;margin:0 auto;background-color:#f9f9f9;padding:20px">
            <div style="background-color:white;padding:30px;border-radius:10px">
              <h2 style="color:#000000">Merhaba {{CUSTOMER_NAME}},</h2>
              <p style="color:#333333;line-height:1.6">Satış işlemleriniz başarıyla tamamlanmıştır.</p>
              <p style="color:#333333;line-height:1.6">Satış tutarı: {{AMOUNT}} TL</p>
              <p style="color:#333333;line-height:1.6">Taksit sayısı: {{INSTALLMENT_COUNT}}</p>
              <p style="color:#333333;line-height:1.6">Aylık taksit tutarı: {{INSTALLMENT_AMOUNT}} TL</p>
              <p style="color:#333333;line-height:1.6">İlk ödeme tarihi: {{FIRST_PAYMENT_DATE}}</p>
              <hr style="border:none;border-top:1px solid #e0e0e0;margin:30px 0">
              <p style="color:#666666;font-size:12px;text-align:center;margin:0">Saygılarımızla,<br>Marka Dünyası</p>
            </div>
          </div>
        `
      },
      {
        name: 'sale_confirmation',
        subject: 'Marka World - Satış Onayı',
        html: `
          <div style="font-family:Arial,sans-serif;max-width:600px;margin:0 auto;background-color:#f9f9f9;padding:20px">
            <div style="background-color:white;padding:30px;border-radius:10px">
              <h2 style="color:#000000">Sayın {{CUSTOMER_NAME}},</h2>
              <p style="color:#333333;line-height:1.6">Satın alma işleminiz başarıyla tamamlanmıştır.</p>
              
              <div style="background-color:#f8f9f9;padding:20px;border-radius:8px;margin:20px 0">
                <h3 style="color:#000000;margin-top:0">Satış Detayları</h3>
                <p style="margin:5px 0">Satış No: #{{SALE_ID}}</p>
                <p style="margin:5px 0">Toplam Tutar: {{TOTAL_AMOUNT}}</p>
                <p style="margin:5px 0">Vade Farkı Dahil Toplam: {{TOTAL_WITH_INTEREST}}</p>
                <p style="margin:5px 0">Taksit Sayısı: {{INSTALLMENT_COUNT}}</p>
              </div>

              <div style="margin:20px 0">
                <h3 style="color:#000000">Taksit Planı</h3>
                <table style="width:100%;border-collapse:collapse;margin-top:10px">
                  <thead>
                    <tr style="background-color:#f8f9f9">
                      <th style="padding:8px;border:1px solid #ddd;text-align:left">Taksit No</th>
                      <th style="padding:8px;border:1px solid #ddd;text-align:left">Vade Tarihi</th>
                      <th style="padding:8px;border:1px solid #ddd;text-align:left">Tutar</th>
                    </tr>
                  </thead>
                  <tbody>
                    {{INSTALLMENT_TABLE}}
                  </tbody>
                </table>
              </div>

              <div style="background-color:#f8f9f9;padding:20px;border-radius:8px;margin:20px 0">
                <h3 style="color:#000000;margin-top:0">Ödeme Bilgileri</h3>
                <p style="margin:5px 0">Firma: {{COMPANY_NAME}}</p>
                <p style="margin:5px 0">IBAN: {{IBAN}}</p>
                <p style="margin:10px 0">Ödemenizi yaptıktan sonra dekontu WhatsApp üzerinden iletebilirsiniz:</p>
                <p style="margin:5px 0">WhatsApp: {{WHATSAPP}}</p>
              </div>

              <hr style="border:none;border-top:1px solid #e0e0e0;margin:30px 0">
              <p style="color:#666666;font-size:12px;text-align:center;margin:0">Saygılarımızla,<br>{{COMPANY_NAME}}</p>
            </div>
          </div>
        `
      },
      {
        name: 'installment_payment',
        subject: 'Marka World - Taksit Ödeme Onayı',
        html: `
          <div style="font-family:Arial,sans-serif;max-width:600px;margin:0 auto;background-color:#f9f9f9;padding:20px">
            <div style="background-color:white;padding:30px;border-radius:10px">
              <h2 style="color:#000000">Sayın {{CUSTOMER_NAME}},</h2>
              <p style="color:#333333;line-height:1.6">Taksit ödemeniz başarıyla alınmıştır.</p>
              
              <div style="background-color:#f8f9f9;padding:20px;border-radius:8px;margin:20px 0">
                <h3 style="color:#000000;margin-top:0">Ödeme Detayları</h3>
                <p style="margin:5px 0">Satış No: #{{SALE_ID}}</p>
                <p style="margin:5px 0">Taksit No: {{INSTALLMENT_NUMBER}}</p>
                <p style="margin:5px 0">Ödenen Tutar: {{INSTALLMENT_AMOUNT}}</p>
                <p style="margin:5px 0">Ödeme Tarihi: {{PAYMENT_DATE}}</p>
                <p style="margin:5px 0">Kalan Borç: {{REMAINING_AMOUNT}}</p>
              </div>

              <div style="background-color:#f8f9f9;padding:20px;border-radius:8px;margin:20px 0">
                <h3 style="color:#000000;margin-top:0">Ödeme Bilgileri</h3>
                <p style="margin:5px 0">Firma: {{COMPANY_NAME}}</p>
                <p style="margin:5px 0">IBAN: {{IBAN}}</p>
                <p style="margin:10px 0">Sorularınız için bize WhatsApp üzerinden ulaşabilirsiniz:</p>
                <p style="margin:5px 0">WhatsApp: {{WHATSAPP}}</p>
              </div>

              <hr style="border:none;border-top:1px solid #e0e0e0;margin:30px 0">
              <p style="color:#666666;font-size:12px;text-align:center;margin:0">Saygılarımızla,<br>{{COMPANY_NAME}}</p>
            </div>
          </div>
        `
      }
    ];

    const emailStmt = db.prepare('INSERT OR REPLACE INTO email_templates (name, subject, html) VALUES (?, ?, ?)');
    
    defaultEmailTemplates.forEach(template => {
      emailStmt.run(template.name, template.subject, template.html);
    });

    emailStmt.finalize((err) => {
      if (err) {
        reject(err);
      } else {
        console.log('Varsayilan mail sablonlari eklendi');
        stmt.finalize((err) => {
          if (err) {
            reject(err);
          } else {
            console.log('Varsayilan ayarlar eklendi');
            resolve();
          }
        });
      }
    });
  });
};

console.log('✅ Veritabanı başarıyla başlatıldı!');

module.exports = {
  db,
  initDatabase,
  insertDefaultData
};